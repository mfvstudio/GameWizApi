openapi: 3.0.4
info:
  title: GameWizApi
  description: |-
    This is an OpenApi 3.0 specification for Game Wiz api. A server used for asynchronous games. GWA is a small, solo,
    project by mfv.
  
  contact:
    email: mfvdev@icloud.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: localhost:8080/v1
tags:
  - name: health
    description: endpoint for checking health of api
  - name: user
    description: Operations for users
paths:
  /health:
    get:
      tags:
        - health
      summary: Useable for devs only, pings server for health check.
      description: Server health status
      operationId: health
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '400':
          description: Invalid Request
        '403':
          description: Forbidden
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    post:
      tags:
        - user
      summary: Create a new user
      description: Endpoint for registering new user
      operationId: createAccount
      requestBody:
        description: Create new user account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true
      responses:
        '201':
          description: Create Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Request
        '403':
          description: Forbidden
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
components:
  schemas:
    HealthCheck:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    CreateAccount:
      type: object
      required:
        - username
        - password
        - email
        - birthdate
      properties:
        username:
          type: string
          example: letmesolohim
        password:
          type: string
          pattern: "^[a-z][A-Z][0-9]+$" #TODO, check regex
          example: 'somePa$$w0rd_'
          format: password
        email:
          type: string
          pattern: "^[a-z][A-Z][0-9]@[a-z].com$"
          example: 'someEmail@provider.com'
          format: email
        birthdate:
          type: integer
          format: int64
          example: 6584613516
      xml:
        name: playercreate
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
  requestBodies:
    CreateAccount:
      description: User object to add to user store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAccount'
        application/xml:
          schema:
            $ref: '#/components/schemas/CreateAccount'
